논리 연산자
비교해야 하는 조건식이 여러개 일때 사용하는 연산자 입니다.
- 논리곱 : &&	~ 이고		AND
- 논리합 : ||	~ 이거나		OR

------------------------------------------------------------------------
조건이 2개 일때
if (조건식 ){

}else{

}
------------------------------------------------------------------------
조건이 2개 일때
if (조건식1 (논리 연산자) 조건식2){

}else{

}
------------------------------------------------------------------------
문자열은 == 안됨
.equals 써야됨

------------------------------------------------------------------------
비트 연산자
- &	AND 	=> 두개의 비트가 모두 1일 때 결과가 1
- |	OR	=> 두개의 비트중 하나라도 1이면 결과가 1
- ^	XOR	=> 두개의 비트의 상태가 서로 다를 때 결과가 1

&와 | 는 논리연산자로 사용 가능함

X	Y     |	&	|	^
------------------------------------------------------------------------
0	0     |	0	0	0
0	1     |	0	1	1
1	0     |	0	1	1
1	1     |	1	1	0

&&과 & 차이
if (++age1 >= 30 & ++age2 >= 30)
= age1:29, age2:30
둘다검사
if (++age1 >= 30 && ++age2 >= 30)
= age1:29, age2:29
모두 검사
조건1이 false라면 조건2를 판별하지 않음
(= short cut operation)

비트이동연산자
- << : 비트 왼쪽 이동	*2
- >> : 비트 오른쪽 이동	/2

삼항 연산자(조건식 연산자)

(항1)?항2:항3
항1 : 조건식
항2 : 참
항3 : 거짓

변수 = (항1)?항2:항3;
System.out.println((항1)?항2:항3);


제어문 : 문장(명령어)의 흐름을 제어 시키는 명령(문장)을 말함
	- 선택문	: 조건에 따라서 동작시키고자 하는 명령(문장)을 선택하는 것
	- 반복문	: 조건을 만족할 동안에 계속해서 어떠한 명령(문장)을 반복하여
		  동작시키는 명령(문장)을 말함
		   - for, while, do ~ while
	- 기타 	: break, continue

---------------------------------------------------------------------------------

if 문을 사용한는 형식
	if ( 조건식 ){
	   조건식이 참일 때 동작시킬 명령어들
} else{
	   조건식이 거짓일 때 동작시킬 명령어들
}
==> 동작시킬 명령어가 한개 밖에 없으면 중괄호를 생략할 수 있다.

---------------------------------------------------------------------------------

판단해야 하는 조건식이 여러개 일때 사용하는 if문
if(조건식1){
	a;
}else if(조건식2){
	b;
}else if(조건식3){
	c;
}











